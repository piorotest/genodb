
name: Run on PR Merge

on:
  pull_request:
    types: [closed]
    branches:
      - main   # or your target branch(es)

jobs:
  on-pr-merge:
    if: github.event.pull_request.merged == true
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
           fetch-depth: 0

      - name: Print PR info
        run: |
          echo "Pull request #${{ github.event.pull_request.number }} was merged into ${{ github.event.pull_request.base.ref }}"

   #   - name: test
   #     run: gh pr view ${{ github.event.pull_request.number }} --json files -q '.files[]'
   #     env:
   #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Changed Files Exporter
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c
        id: changed-files

           
      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

 #     - name: Pythonie
 #       env:
 #          GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
 #          PR_NUMBER    : ${{ github.event.pull_request.number }}
 #          REPO_NAME    : ${{ github.repository }}
 #       run: |
 #          cd /home/docker/check
 #          python3 check.py


      - name: Configure runner
        run: |
          docker run --rm --name generator -e ACTION=config \
          -v "/home/pioro/runner_os/_work/_temp/_github_home":"/github/home" \
          -v "/home/pioro/runner_os/_work/_temp/_github_workflow":"/github/workflow" \
          -v "/home/pioro/runner_os/_work/_temp/_runner_file_commands":"/github/file_commands" \
          -v "/home/pioro/runner_os/_work/genodb/genodb":"/github/workspace" \
          pioro/syncer:latest \
          --repopath /github/workspace \
          --outputroot /github/workflow \
          --host ${{ vars.TARGET_SERVER }} \
          --port ${{ vars.TARGET_PORT }} \
          --service ${{ vars.TARGET_SERVICE }} \
          --username ${{ vars.GEN_USER }} \
          --sysdba 

          cat /home/pioro/runner_os/_work/_temp/_github_workflow/.config.json


      - name: Deploy code
        env:
          GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER    : ${{ github.event.pull_request.number }}
          REPO_NAME    : ${{ github.repository }}
        run: |
            cat /home/pioro/runner_os/_work/_temp/_github_workflow/.config.json
            docker run  \
                       -e GITHUB_TOKEN=$GITHUB_TOKEN \
                       -e PR_NUMBER=$PR_NUMBER \
                       -e REPO_NAME=$REPO_NAME \
                       -e DEPLOY_SCHEMA=${{ vars.SCHEMA_OWNER1 }}  \
                       -e DEPLOY_SCHEMA_PASSWORD=${{ secrets.SCHEMA_OWNER1 }} \
                       -e ACTION=generateall \
                       -e GENPASS=${{ secrets.GENPASS }} \
                       -v "/home/pioro/runner_os/_work/_temp/_github_home":"/github/home" \
                       -v "/home/pioro/runner_os/_work/_temp/_github_workflow":"/github/workflow" \
                       -v "/home/pioro/runner_os/_work/_temp/_runner_file_commands":"/github/file_commands" \
                       -v "/home/pioro/runner_os/_work/genodb/genodb":"/github/workspace" \
                       pioro/syncer:latest
            ls -la /home/pioro/runner_os/_work/_temp/_github_workflow/
        continue-on-error: true

      # - name: Deploy code
      #   uses: ./.github/actions/dbgit/
      #   with:
      #     deploy_schema: ${{ vars.SCHEMA_OWNER1 }}
      #     deploy_schema_password: ${{ vars.SCHEMA_OWNER1 }}
      #     action: "generateall"
      #     genpass: ${{ secrets.GENPASS }}
      #     output_directory: "/home/pioro/output"
      #   continue-on-error: true


      - name: Run my action
        uses: ./.github/actions/my-action/
        with:
          username: "Alice"
          token: ${{ secrets.GITHUB_TOKEN }}
          marcin: "dupa"
        if: always()




      - name: Generate list using Markdown
        env:
          GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER    : ${{ github.event.pull_request.number }}
          REPO_NAME    : ${{ github.repository }}
        run: |
          echo "This is the lead in sentence for the list" >> $GITHUB_STEP_SUMMARY
          ls -la /home/pioro/runner_os/_work/_temp/_github_workflow/
          docker run  \
                      -e GITHUB_TOKEN=$GITHUB_TOKEN \
                      -e PR_NUMBER=$PR_NUMBER \
                      -e REPO_NAME=$REPO_NAME \
                      -e ACTION=report \
                      -e GENPASS=${{ secrets.GENPASS }} \
                       -v "/home/pioro/runner_os/_work/_temp/_github_home":"/github/home" \
                       -v "/home/pioro/runner_os/_work/_temp/_github_workflow":"/github/workflow" \
                       -v "/home/pioro/runner_os/_work/_temp/_runner_file_commands":"/github/file_commands" \
                       -v "/home/pioro/runner_os/_work/genodb/genodb":"/github/workspace" \
                      pioro/syncer:latest --sources target

          cat $RUNNER_TEMP/report.md >> $GITHUB_STEP_SUMMARY

        if: always()

